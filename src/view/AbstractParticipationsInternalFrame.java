
package view;

import controller.AbstractParticipationsInternalFrameController;
import exceptions.InvalidAddBecauseOfLimit;
import javax.swing.DefaultListModel;
import model.Championship;

// abstract class that contains some methods that are common for
// the subclasses: TeamsParticipationsInternalFrame and SolistsParticipationsInternalFrame
public abstract class AbstractParticipationsInternalFrame extends AbstractJInternalFrame {

    // controller
    protected AbstractParticipationsInternalFrameController controllerObject;
    
    // constructor
    public AbstractParticipationsInternalFrame() {
        initComponents();
    }

    public void setCompetitorsParticipationsInternalFrameControllerObject
                (AbstractParticipationsInternalFrameController controllerObject){
     
                this.controllerObject = controllerObject;
    }
    
    public String getStringForFinalizableTextfield(){
        
        if (this.controllerObject.getChampionshipObject().getFinalizable())
            return "Yes";
        else
            return "No";
    }
    
    // updaters
                
    // general update of this JInternalFrame
    public void updateInternalFrame(DefaultListModel<String> availableCompetitorsDefaultListModelObject,
                                            DefaultListModel<String> inCompetitorsDefaultListModelObject){
        
        updateInfoPanel();
        updateAvailableCompetitorsList(availableCompetitorsDefaultListModelObject);
        updateInCompetitorsList(inCompetitorsDefaultListModelObject);
    }
    
    public void updateInternalFrameForInOrForOutAvailableButtonUsed(
                                    DefaultListModel<String> availableCompetitorsDefaultListModelObject,
                                            DefaultListModel<String> inCompetitorsDefaultListModelObject){
        
        updateAvailableCompetitorsList(availableCompetitorsDefaultListModelObject);
        updateInCompetitorsList(inCompetitorsDefaultListModelObject);
    }
    
    public abstract void updateInfoPanel();
    
    public void updateAvailableCompetitorsList(DefaultListModel<String> availableCompetitorsDefaultListModelObject){
        super.ClearJList(availableCompetitorsDefaultListModelObject);
                    
        this.controllerObject.updateAvailableCompetitorsListModel(availableCompetitorsDefaultListModelObject);
    }
    
    public void updateInCompetitorsList(DefaultListModel<String> inCompetitorsDefaultListModelObject){
        super.ClearJList(inCompetitorsDefaultListModelObject);
        
        this.controllerObject.updateInCompetitorsListModel(inCompetitorsDefaultListModelObject);
    }
    
    public abstract void updateVisibilityOfInOutButtons();
    
    public abstract void writeParticipationsGuideString();
    
    // checks if there is space for adding one more participation
    public void checkForInvalidAddBecauseOfLimit(String domainString) throws InvalidAddBecauseOfLimit{
        
        Championship championshipObject = this.controllerObject.getChampionshipObject();
        
            if (championshipObject.getNumberOfCompetitors() == championshipObject.getNumberOfCompetitorsBigO())
                throw new InvalidAddBecauseOfLimit(domainString);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
